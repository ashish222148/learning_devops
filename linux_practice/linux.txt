# this is linux notes.

To check the password policy of system:
    cat /etc/login.defs

what is group?
	Group is collection of user accounts, group is very useful for system administrator to manage permission number of users.

Types of group:
1-primary group:
    this group account create and delete automatically with user account operations.
2-secondry group account:
    secondry group account create and delete by privilege users.

group account database
1-group account properties: /etc/group
2-group admin properties: /etc/gshadow

steps to manage group account:
    crate group account:
        groupadd ailiya
    check group properties:
        grep accountgroup /etc/group

modify group id:
    groupmod -g 2020 ailiya
add single member in group:
    gpasswd -a arun ailiya
remove single member from group
    gpasswd -d arun ailiya
add/remove multiple users in a group:
    gpassd -M user1,user2
make group admin:
    gpasswd -A arun ailiya
delete group account:
    groupdel accountant

----------------------------------------------------------------Permission--------------------------------------------------------------------

Permission:
1-basic permission
2-acl permission  - Access control list
3-special permission

1: Basic Permission:
    basic permission is flexiable to manage.
    we can assign permission to user , group and other.

    to check permission of a file:
        ls -l ./note.txt
    to check permission of directory:
        ls -ld /directory
    
    if lrwxrwxr-x , means start with l , then neither its file nor folder its basically shortcut of any application/file/folder

    How to add permission:
        chmod o+rw /test
        o=other
        g=group
        u=user
        chmod o-r-x /test
        chmod g+rwx /test
        or chmod 766 /test

        remove all permission from user,group and other
            chmod u-rwx,g-rwx,o-rwx /test
            or
            chmod ugo-rwx /test
        add all permission from user,group and other
            chmod u+rwx,g+rwx,o+rwx /test
            or
            chmod ugo+rwx /test

    change the owership of file and folder
        chown ashish:ailiya ./notes.txt
    only owner change:
        chown ashish ./notes.txt
    only group change 
        chgrp ailiya ./notes.txt

2-ACL: Access Control list:
    ACL permission use for provide permission to specific user or group
    to check ACL:
        getfacl /test

    set ACL permission to user:
        setfacl -m u:arun:rx test
        setfacl -m u:arun:7 test

    modify ACL permission:
        setfacl -m u:arun:6 test

    remove ACL permission from user:
        setfacl -x u:arun:  test

    remove all ACL permission at a time:
        setfacl -b test

    set ACL permission to group:
        setfacl -m g:ailiya:7 test

    remove ACL permission permission of group:
        setfacl -x g:miowner: test
Note: we can also explicilty remove permission from a user whether user have already by default permission

3-Special Permission:
    special permission design for executable file and directories.

    It divied in to three parts
        1-SUID (Set User ID)
        2-SGID  (Set Group ID)
        3-Sticky bit
    

    SUID:when we set suid permission on any executable file then any can ran/execute that file as a owner.
        for set suid:
            chmod u+s /usr/bin/nmtui
        for remove suid:
            chmod u-s /usr/bin/nmtui
        result:dsrwr-xrw- like that, s donates suid, if s is in small case , then it means x is present, else if its S, x is not available

        note: result will be any command will be run by any user once we set this.
    SGID:
        when we set gid permission on any directory then that directory group ownership inherited on child file/directories

        for set sgid:
            chmod g+s /tcs
        for remove sgid:
            chmod g-s /tcs

    sticky bit:
        when we set sticky bit permission on any directory then contents inside that directory can only delted by user.
        it is popularly for publically shared directory

        for set sticky bit
        chmod o-t /database

    special permission with number:
        u+s=4
        g+s=2
        o+t=1

    set suid:
     chmod 4755 /usr/bin/su
     chmod -4000 /usr/bin/su

    ls -ld /test
    chmod u+s /test

    s=small  case , then x is also present

    S= capital case, then X is absent

---------------------------------------------------------------------------------------------------------------------------------------
Regular expression:
    Regular expression is process of search file/dir based on matching pattern such as name,owner,group ownership
    permission size etc.
    following command popularly use in Regular expression-

    1-grep
    2-find
    3-head
    4-tail
    5-wc

    1-grep (gloal Regular expression print)
        it is basically search in the content of file.
        vim /home/linux.txt
        linux is secure owership
        linux was developed by linus torvald
        linux is fast
        windows and linux os both are popular

        1-search secure keyword
        grep secure /home/linux.txt

        2-search secure keyword in multiple file
        grep secure /home/linux.txt /etc/password /etc/group

        3-show matched file name(list)
        grep -l secure /home/linux.txt /etc/passwd /etc/group

        4-show unmatched file name (list)
        grep -L secure /home/linux.txt /etc/passwd /etc/group

        5-show matched line number:
        grep -n secure /home/linux.txt

        6-show match counting
        grep -c os /home/linux.txt

        7-incase senstive search:
        grep -i linux /home/linux.txt

        8-show inverse result:
        grep -v secure /home/linux.txt

        9-line starting with given keyword
        grep ^linux  /etc/linux.txt

        10-line ending with given keyword
        grep os$ /etc/linux.txt

        11-search recursively
        grep -r linux /home/

        12-redirect search result in to file
        grep secure /home/linux.txt > /info.txt

        13-append search result in to file:
        grep os /home/linux >> /info.txt
        
    2-find:
        find command use for serach file / dir on basis of name,owner ,groupowner,permission,size etc.

            a-serach with name:
                find /home -name linux.txt
            b-seach with owner:
                find / -user ashish
            c-seach with groupownerhip:
                find / -group tatagroup
            d-seach with permission:
                find /usr -perm 4755
                find /usr -perm 2755
                find /usr -perm 777
            e-seach basis on size
                find / -size -10M(less than 10 MB)
                find / -size +100M(greater than 100MB)
                find / -size +50M -size 100M(greater than 50 less than 100 MB)
VIMP        f- search ashish user ownership file and delete it.
                find /india -user karan -exec rm -rvf {} \;
            g- search ashish user ownership file and copy in backup .
                find /india -user karan -exec cp -rvf {} /backup/ \;

    3-head:
        head command use for show top 10 line of the file
            head /etc/passwd
        show 5 lines:
            head -n /etc/passwd
    4-tail:
        tail command used for show bottom 10 lines of the file:
            tail /etc/passwd
        show bottom 4 lines:
            tail -n 4 /etc/passwd
    5-wc:
        wc command use for count characters, words and lines in a file.
            wc /home/linux.txt
            (in results: line words characters)
            wc -l /home/linux.txt  for show line count
            wc -c /home/linux.txt  for show character count
            wc -w /home/linux.txt  for show word count
---------------------------------------------------------------------------------------------------------------------------------------

Archive File:
    archive is a process of combine multiple file and directory into a single bunch.
        it usefull for backup purpose.
        it can also supportable for compress size.
        in linux tar command popularly use for create archive and compress file.

    Tar: Tap Archive
        tar command popularly use most of linux/unix administrator to archive and compression purpose.
        tar command is use compression format(algorithm) to compression size.

        gzip (.gz)
        bzip2(.bz2)
        xzip (.xz)

    a-  du -sh /usr  --to check file size
        du -sh /usr/bin
        tree /usr/bin

    b-create archive:
        tar -cvf /mnt/backup.tar /usr/sbin  --> only archive happen
    c-compression:
        create archive with gzip compression:(-z)
            tar -cvzf /mnt/backup.tar.gz /usr/sbin -fast
    d-create archive with bzip2 compression(-j)
        tar -cvjf /mnt/backup.tar.bz2 /usr/sbin -slower
    e-create archive with xzip compression(-J)
        tar -cvJf /mnt/backup.tar.xz /usr/sbin -slowest

    f-check the content in archive file:
        tar -tvf /mnt/backup.tar
    
Unarchive File:
    extract archive (default location)
        tar -xvf /mnt/backup.tar
    
    create directory for extract purpose:
        mkdir /gzip /bzip /xzip

    extract archive compressed with gzip(custom location)
        tar -xvzf /mnt/backup.tar.gz -C /gzip

    extract archive compressed with bzip2 (custom location)
        tar -xvjf /mnt/backup.tar.bz2 -C /bzip/

    extract archive compressed with xzip (custom location) 
        operations
            -c create
            -v verbose
            -f forcefully
            -t test
            -C cutom location
            -z gzip compression
            -j bzip2 compression
            -J xzip compression   
----------------------------------------------------------------------------------------------------------

job automation:
    is a process of complete jon automatically basis on time.
    it is usefule for routine work such as backup.
    it is also helpful to do task when system administrator is not present.
    for job use following command:
        1- at
        2-crontab

    set system proper time and date 
            date
        disable and stop automation time syn(chronyd service)
            systemctl disable chronyd
            systemctl stop chronyd
        set time and date manually
            timedatectl set-time "2025-04-12 11:26:40"
    
    1-at:
        at command use execute/run job only one time.

        a-set job with at command:
            at 21.25
            at>useradd ajay
            at>
            press "ctrl+d"

        to check the scheduled job of at
            atq
        to check the job in detail:
            cd /vat/spool/at
            cat a00---- or tail a0000----

        to remove job from pending list:
            atrm jobnumber(4)

    to restrict any user , who can not run aq command
        vim /etc/at.deny

        ashish

    for future date:
        man at
        run job 3 days later:
            at 16.00 + 3 days
        run job 31dec
            at 16:00 dec 31
        run job tomorrow:
            at 22:00 tomorrow

    2-crontab:
        crontab is use execute /run  job multiple times:

        crontab -e 
        * * * * * <job>

        1*-minutes of an hour(0-59)
        2*-Hours of a day(0-23)
        3*-day of a month(1-31)
        4*-month of a year(1-12)
        5*-day of an a week (sun,mon,tues/0-6)

        every day 6:30 pm 
        30 18 * * *

        every date 10
        30 18 10 * * *

        every 30 minutes
        30 * * * *
        */30 * * * * date >> /city.txt

        30 18 10,11,12 

        every saturday
        20 18 * * * 6
    
    man crontab
        to check the all schduled job
            crontab -l

        for remove job(all jobs at a time)
            crontab -r
        
        for remove or modify job
            crontab -e
            remove or modify line as per requirement

        crontab -l -u ajay
        crontab -u ajay -l 

        edit other user's job
            crontab -u ajay -e 
        remove other user's job:
            crontab -u ajau -r

    restrict ashish not to run cronjob
        vim /etc/cron.deny
        ashish

    check crontab log:
    cat /var/log/cron
    tail -f /var/log/cron  f means follow 
    


