# this is linux notes.

To check the password policy of system:
    cat /etc/login.defs

what is group?
	Group is collection of user accounts, group is very useful for system administrator to manage permission number of users.

Types of group:
1-primary group:
    this group account create and delete automatically with user account operations.
2-secondry group account:
    secondry group account create and delete by privilege users.

group account database
1-group account properties: /etc/group
2-group admin properties: /etc/gshadow

steps to manage group account:
    crate group account:
        groupadd ailiya
    check group properties:
        grep accountgroup /etc/group

modify group id:
    groupmod -g 2020 ailiya
add single member in group:
    gpasswd -a arun ailiya
remove single member from group
    gpasswd -d arun ailiya
add/remove multiple users in a group:
    gpassd -M user1,user2
make group admin:
    gpasswd -A arun ailiya
delete group account:
    groupdel accountant

----------------------------------------------------------------Permission--------------------------------------------------------------------

Permission:
1-basic permission
2-acl permission  - Access control list
3-special permission

1: Basic Permission:
    basic permission is flexiable to manage.
    we can assign permission to user , group and other.

    to check permission of a file:
        ls -l ./note.txt
    to check permission of directory:
        ls -ld /directory
    
    if lrwxrwxr-x , means start with l , then neither its file nor folder its basically shortcut of any application/file/folder

    How to add permission:
        chmod o+rw /test
        o=other
        g=group
        u=user
        chmod o-r-x /test
        chmod g+rwx /test
        or chmod 766 /test

        remove all permission from user,group and other
            chmod u-rwx,g-rwx,o-rwx /test
            or
            chmod ugo-rwx /test
        add all permission from user,group and other
            chmod u+rwx,g+rwx,o+rwx /test
            or
            chmod ugo+rwx /test

    change the owership of file and folder
        chown ashish:ailiya ./notes.txt
    only owner change:
        chown ashish ./notes.txt
    only group change 
        chgrp ailiya ./notes.txt

2-ACL: Access Control list:
    ACL permission use for provide permission to specific user or group
    to check ACL:
        getfacl /test

    set ACL permission to user:
        setfacl -m u:arun:rx test
        setfacl -m u:arun:7 test

    modify ACL permission:
        setfacl -m u:arun:6 test

    remove ACL permission from user:
        setfacl -x u:arun:  test

    remove all ACL permission at a time:
        setfacl -b test

    set ACL permission to group:
        setfacl -m g:ailiya:7 test

    remove ACL permission permission of group:
        setfacl -x g:miowner: test
Note: we can also explicilty remove permission from a user whether user have already by default permission

3-Special Permission:
    special permission design for executable file and directories.

    It divied in to three parts
        1-SUID (Set User ID)
        2-SGID  (Set Group ID)
        3-Sticky bit
    

    SUID:when we set suid permission on any executable file then any can ran/execute that file as a owner.
        for set suid:
            chmod u+s /usr/bin/nmtui
        for remove suid:
            chmod u-s /usr/bin/nmtui
        result:dsrwr-xrw- like that, s donates suid, if s is in small case , then it means x is present, else if its S, x is not available

        note: result will be any command will be run by any user once we set this.
    SGID:
        when we set gid permission on any directory then that directory group ownership inherited on child file/directories

        for set sgid:
            chmod g+s /tcs
        for remove sgid:
            chmod g-s /tcs

    sticky bit:
        when we set sticky bit permission on any directory then contents inside that directory can only delted by user.
        it is popularly for publically shared directory

        for set sticky bit
        chmod o-t /database

    special permission with number:
        u+s=4
        g+s=2
        o+t=1

    set suid:
     chmod 4755 /usr/bin/su
     chmod -4000 /usr/bin/su

    ls -ld /test
    chmod u+s /test

    s=small  case , then x is also present

    S= capital case, then X is absent

---------------------------------------------------------------------------------------------------------------------------------------
Regular expression:
    Regular expression is process of search file/dir based on matching pattern such as name,owner,group ownership
    permission size etc.
    following command popularly use in Regular expression-

    1-grep
    2-find
    3-head
    4-tail
    5-wc

    1-grep (gloal Regular expression print)
        it is basically search in the content of file.
        vim /home/linux.txt
        linux is secure owership
        linux was developed by linus torvald
        linux is fast
        windows and linux os both are popular

        1-search secure keyword
        grep secure /home/linux.txt

        2-search secure keyword in multiple file
        grep secure /home/linux.txt /etc/password /etc/group

        3-show matched file name(list)
        grep -l secure /home/linux.txt /etc/passwd /etc/group

        4-show unmatched file name (list)
        grep -L secure /home/linux.txt /etc/passwd /etc/group

        5-show matched line number:
        grep -n secure /home/linux.txt

        6-show match counting
        grep -c os /home/linux.txt

        7-incase senstive search:
        grep -i linux /home/linux.txt

        8-show inverse result:
        grep -v secure /home/linux.txt

        9-line starting with given keyword
        grep ^linux  /etc/linux.txt

        10-line ending with given keyword
        grep os$ /etc/linux.txt

        11-search recursively
        grep -r linux /home/

        12-redirect search result in to file
        grep secure /home/linux.txt > /info.txt

        13-append search result in to file:
        grep os /home/linux >> /info.txt
        
    2-find:
        find command use for serach file / dir on basis of name,owner ,groupowner,permission,size etc.

            a-serach with name:
                find /home -name linux.txt
            b-seach with owner:
                find / -user ashish
            c-seach with groupownerhip:
                find / -group tatagroup
            d-seach with permission:
                find /usr -perm 4755
                find /usr -perm 2755
                find /usr -perm 777
            e-seach basis on size
                find / -size -10M(less than 10 MB)
                find / -size +100M(greater than 100MB)
                find / -size +50M -size 100M(greater than 50 less than 100 MB)
VIMP        f- search ashish user ownership file and delete it.
                find /india -user karan -exec rm -rvf {} \;
            g- search ashish user ownership file and copy in backup .
                find /india -user karan -exec cp -rvf {} /backup/ \;

    3-head:
        head command use for show top 10 line of the file
            head /etc/passwd
        show 5 lines:
            head -n /etc/passwd
    4-tail:
        tail command used for show bottom 10 lines of the file:
            tail /etc/passwd
        show bottom 4 lines:
            tail -n 4 /etc/passwd
    5-wc:
        wc command use for count characters, words and lines in a file.
            wc /home/linux.txt
            (in results: line words characters)
            wc -l /home/linux.txt  for show line count
            wc -c /home/linux.txt  for show character count
            wc -w /home/linux.txt  for show word count
---------------------------------------------------------------------------------------------------------------------------------------

Archive File:
    archive is a process of combine multiple file and directory into a single bunch.
        it usefull for backup purpose.
        it can also supportable for compress size.
        in linux tar command popularly use for create archive and compress file.

    Tar: Tap Archive
        tar command popularly use most of linux/unix administrator to archive and compression purpose.
        tar command is use compression format(algorithm) to compression size.

        gzip (.gz)
        bzip2(.bz2)
        xzip (.xz)

    a-  du -sh /usr  --to check file size
        du -sh /usr/bin
        tree /usr/bin

    b-create archive:
        tar -cvf /mnt/backup.tar /usr/sbin  --> only archive happen
    c-compression:
        create archive with gzip compression:(-z)
            tar -cvzf /mnt/backup.tar.gz /usr/sbin -fast
    d-create archive with bzip2 compression(-j)
        tar -cvjf /mnt/backup.tar.bz2 /usr/sbin -slower
    e-create archive with xzip compression(-J)
        tar -cvJf /mnt/backup.tar.xz /usr/sbin -slowest

    f-check the content in archive file:
        tar -tvf /mnt/backup.tar
    
Unarchive File:
    extract archive (default location)
        tar -xvf /mnt/backup.tar
    
    create directory for extract purpose:
        mkdir /gzip /bzip /xzip

    extract archive compressed with gzip(custom location)
        tar -xvzf /mnt/backup.tar.gz -C /gzip

    extract archive compressed with bzip2 (custom location)
        tar -xvjf /mnt/backup.tar.bz2 -C /bzip/

    extract archive compressed with xzip (custom location) 
        operations
            -c create
            -v verbose
            -f forcefully
            -t test
            -C cutom location
            -z gzip compression
            -j bzip2 compression
            -J xzip compression   
----------------------------------------------------------------------------------------------------------

job automation:
    is a process of complete jon automatically basis on time.
    it is usefule for routine work such as backup.
    it is also helpful to do task when system administrator is not present.
    for job use following command:
        1- at
        2-crontab

    set system proper time and date 
            date
        disable and stop automation time syn(chronyd service)
            systemctl disable chronyd
            systemctl stop chronyd
        set time and date manually
            timedatectl set-time "2025-04-12 11:26:40"
    
    1-at:
        at command use execute/run job only one time.

        a-set job with at command:
            at 21.25
            at>useradd ajay
            at>
            press "ctrl+d"

        to check the scheduled job of at
            atq
        to check the job in detail:
            cd /vat/spool/at
            cat a00---- or tail a0000----

        to remove job from pending list:
            atrm jobnumber(4)

    to restrict any user , who can not run aq command
        vim /etc/at.deny

        ashish

    for future date:
        man at
        run job 3 days later:
            at 16.00 + 3 days
        run job 31dec
            at 16:00 dec 31
        run job tomorrow:
            at 22:00 tomorrow

    2-crontab:
        crontab is use execute /run  job multiple times:

        crontab -e 
        * * * * * <job>

        1*-minutes of an hour(0-59)
        2*-Hours of a day(0-23)
        3*-day of a month(1-31)
        4*-month of a year(1-12)
        5*-day of an a week (sun,mon,tues/0-6)

        every day 6:30 pm 
        30 18 * * *

        every date 10
        30 18 10 * * *

        every 30 minutes
        30 * * * *
        */30 * * * * date >> /city.txt

        30 18 10,11,12 

        every saturday
        20 18 * * * 6
    
    man crontab
        to check the all schduled job
            crontab -l

        for remove job(all jobs at a time)
            crontab -r
        
        for remove or modify job
            crontab -e
            remove or modify line as per requirement

        crontab -l -u ajay
        crontab -u ajay -l 

        edit other user's job
            crontab -u ajay -e 
        remove other user's job:
            crontab -u ajau -r

    restrict ashish not to run cronjob
        vim /etc/cron.deny
        ashish

    check crontab log:
    cat /var/log/cron
    tail -f /var/log/cron  f means follow 


    setting crontab job using script file:
        a- create job script file:
            mkdir /jobs
            vim /jobs/script1.sh
            #!/bin/bash
            echo "My name is ashish" >> /computer.txt
        provide execute permission :
            chmod 755 /jobs/script1.sh
        set crontab
            crontab -e 
            * * * * * /jobs/script1.sh
    
----------------------------------------------------------------------------------------------------------------------------------------------

Disk Partition:
    partition is a process of divide a harddisk drive into multiple logical storage unit.
    called partition.
Disk Name:
    Linux maintain disk naming convention for SATA, PATA and virtual disk as follows:
    1-SATA(Serial Advance Technology Attachment)
    2-PATA(Parallel Advance technology Attachment)-outdated /dev/hda
    3-virtual

lsblk:
    /dev/sda -SATA -disk 1
        /dev/sda1
        /dev/sda2
    /dev/sdb -SATA -disk -2
        /dev/sdb1
        /dev/sdb2
    /dev/vda -virtual
        /dev/vda1
        /dev/vda2

Partition Type:
    1-primary:
        we can create max 4 primary partition .
        if we require more than 4 partition, then we need to create 1 extende partition.
    2-extended:
        we can create only one extended partion in to a single hard disk.
        it should belong from 1-4 ragne(mean one out of primary)
        it work as a container for logical partition

    3-logical
        it take space from extended partition.
        it always start from partition number 

lsblk
or
fdisk -l

poweroff
add second hard disk in vm 
vm setting-storage-sata controller-add hard disk-create 10gb ok , start vm

second hard disk added as sdb 
take snap shot 

steps for manage partition:
    1-create partition
        fdisk /dev/sdb
        m for help
        n new partition
        d delete partition
        p print partition
        t change partition type
        q quit(close without saving)
        w write and quite (save and close)
        l show partition type list
    2- for show partition
        lsblk
    3- for create file system(format)
        mkfs.xfs /dev/sdb1
    
    what is file system?
    file system is a process of create a structure on partition where OS can store data.
    eg:
    linux-ext,ext2,ext3,ext4,xfs (RHEL 7/8/9 -default file system is XFS)
    windows- fat16,fat32,ntfs,refs

    4-mount partition(temporary)
        mkdir /study 
        mount /dev/sdb1 /study
    5- mount partition (permanantly)
        vim /etc/fstab
        /dev/sdb1   /study  xfs defaults    0   0
    6-mount all partition
    mount all partition (written in fstab file)
    mount -a 
    7-check partition mounting
        lsblk
    8-unlount partition and remove record from /etc/fstab
        umount /study
        vim /etc/fstab

        remove partition line (dd)
    mount -a 
    
    9- delete partion
     fdisk /dev/sdb
     delete partition d 
     :want
    10- we can mount partition with help of uuid (universal unique id) also
        show uuid /dev/sdb1

        to fetch the block id:
            blkid /dev/sdb1

        vim /etc/fstab
        UUId="btffgyghih-mnjjj" /chennai xfs defaults 0 0
        :wq

(Conclusion: 
    1-fist need to add disk
    2-do the partition
    3-format the partition
    4-mount the partition
    5-permanantly mount the partition)



Resize Partition:
    note:
        before resize partition always take backup first.
        tar -cvzf /mnt/mumbai.tar.gz /mumbai

    1-Resize ext4 file system partition
        unmount partition:
            umount /mumbai
        resize partition
            fdisk /dev/sdb
            delete partition and create now one with required size
            do you want remove signature - NO 

        check error  of file system and resize file system
            e2fsck -f /dev/sdb1
            resize2fs /dev/sdb1
        mount partition
            mount -a 
            lsblk
            ls /mumbai
    2- resize xfs file system partition
        resize partition size
        fdisk /dev/sdb

        delete partition and create new one with extended size
        do you want remove signature - NO 

        resize file system
        xfs_growfs /pune

        lsblk ls /pune

        Note: ext4 file system support increase or decrease (extend or shrink ) partition size
            xfs file system only supported for extend increase partition size.

swap:
    swap memory is one type of RAM(virtual)
    swap memory take space from hard disk space.
    it support physical ram to handle load when pram is full.
    expert recomended create your system swap approximately dual size of physical ram.

Steps for create swap:

1-check swap space
free -m 
2-create swap memory:
fdisk /dev/sdb 
create partition with required size and set partition id (82) for swap
:wq
3-to make swap:
    mkswap /dev/sdb3

4- to swap on
    swapon /dev/sdb3
5-permanant mount swap
vim /etc/fstab
/dev/sdb3 swap swap defaults 0 0
mount -a 
6- for swap off
swapoff /dev/sdb3
for off all swap
swapoff -a 
for on all swap
swapon -a 

7-for remove swap
 first swap off
 then remove record from /etc/fstab file and finally remove partition



----------------------------------------------------------------------------------------LVM -----------------------------------------------------------------------------------------

 LVM:
 Logical Volume Manager:
    LVM is widely used technique and extremely flexiable disk management scheme for logical rather than physical storage.
    with the help of LVM , system administrator can easily resize and extend the logical drive when it required.

    LVM created in three steps:
        1-Physical Volume(PV)
        2-Volume Group(VG): It is a collection of PV, it creates from one or more physical volume.

        3-Logical Volume(LV)

    (physocal volume creates from partition-(with the same name))

Steps for manage LVM:
    create partition for LVM(With LVM ID =8e)
            a-create partition
                fdisk /dev/sdb
                    create partition with 1GB and set partition type (id=8e) LVM.
                        t 
                        8e
                        w 
            b-check partition
                lsblk

1-  Steps for manage (Physical Volume)PV: 
            PV creates from physical partition.
            a-for create PV
                pvcreate /dev/sdb1

            b-for display PV
                pvdisplay /dev/sdb1

            c-for remove physical volume:
                pvremove /dev/sdb1
2-  Steps for create Volume Group(VG):
            a-vgcreate india /dev/sdb1

        for display vg
            b- vgdisplay india
            PE: Physical extend
            default PE size=4MB(we can increase but in power of 2 but at the time of creation only)
            100 MB PV convert in tp VG 25(25-1)
            1024/4=256
            VG=255
        for remove vg
            vgremove india

        vgcreate -s 8 india /dev/sdb1
so if you want to extend the size of VG, you have to first add partition, create PV, then and that PV to VG
        to extend size:
            vgextend india /dev/sdb2
        to reduce:
            vgreduce india /dev/sdb2
3- steps to create LV(Logical Volume)
        logical extend: 200MB(50 LE)(50PE*4)
        it create from volume group, we can use LV like partition
        like format it mount it and use it.

        for create LV
            lvcreate -L 200 -n /dev/india/punelv
            -L =size in MB 
        for display LV
            lvdisplay /dev/india/punelv
        for remove lv 
            lvremove    /dev/india/punelv
        for extend
        lvextend -L +100 /dev/india/punelv
        for reduce lv
        lvreduce -L -100 /dev/india/punelv

        lvextend -l +25 /dev/india/punelv

create file system and mounting
mkfs.xfs /dev/india/punelv

create directory and temporary mount
mkdir /pune
mount /dev/india/punelv /pune

permanant mounting:
    /dev/india/punelv /pune xfs defaults 0 0
    :wq!
mount -a 
lsblk

Conclusion:
    1-create partition for LVM
    2-create pv from partition
    3-create vg from pv
        extend vg:
            add partition
            create pv
            extend in vg
    4-create lv from vg
    5-mkfs.xfs /dev/india/lv 
    6-mount permamant
        vim /ete/fstab
        mount -a
-------------------------------------------------------------------------------26-April-2025-----------------------------------------------------------------------------------
Linux Boot Process:
    the boot process loads the os into main memory or the RAM installed in your computer.

    POST:
    MBR :
    GRUB2:
    Kernel:
    systemd:

RUN level:
    0-6
    is a state of machine that define how a machine should be login,what services and scripts
    should run a machine starts.

    RunLevel 0  poweroff.target     -shutdown computer
    RunLevel 1  rescue.target       -use for troubleshoot purpose (single user mode)
    RunLevel 2  multi-user.target   -provide TUI, network is not present
    RunLevel 3  multi-user.target   -provide TUI(Text User Interface) ,GUI not present
    RunLevel 4  not in user         -reserve for future purpose
    RunLevel 5  graphical.target    -provide GUI 
    RunLevel 6  reboot.target       -reboot computer

for check default RunLevel
    systemctl get-default
for reboot computer with help of RunLevel
    init 6
to set default run level
systemctl set-default multi-user.target/runlevel3.target
systemctl set-default graphical.target/runlevel5.target
-------------------------------------------------------------------------
Steps for reset root password:
    step 1:
        reboot computer
    step 2:
        press esc 4-5 times when shows kernel line
    step -3:
        to go kernel rescue line and press e for edit
    step -4:
        to to 4th line, big one , go to end of that line(linux ($root)/mv)
    step 5:
        type rd.break(regular demon break)
    step 6:
        ctrl+x
    step 7:
        mount -o remount,rw /sysroot
        chroot /sysroot
    step 8:
        set new password for root
            passwd root
    step 9:
        reset selinux security policies
            touch /.autorelable
            exit 
            exit 
    step 10:
        login with new password
-----------------------------------------------------------------------------
protect grub with password: 
    no one will be abkle to access the sigle user mode.

    grub is the default bootloader for all linux and Unix like Operating systems.
    it was first envented by sir erich stefan boleyn on year 1995.
    grub is used to load the kernel and then kernel loads the os , in short grub is the module 
    which is used to start the operating system.
    anyone can login into single user mode and may change system setting as needed.
    this is the big security flow.
    so to prevent such unauthorized person to access system we may required to have 
    protected with GRUB password.

Step-1 Genarate encrypted password:
        grub2-mkpasswd-pbkdf2

        enter password which you want to set to grup and copy encrypted password.

Step-2 set the password in GRUB main configuration file:
    vim /etc/grub2.cfg 
    go to under section:
    #Begin /etc/grub.d/10_linux ##
    set superusers=root
    export superusers
    password_pbkdf2 root <encrypted password>
    :wq!

step 3:
    Reboot computer and try to reset root password
    #reboot
    press ESC and press e to edit kernel.

------------------------------------------------------------------------------------------------
sudo command:
    super user do(sudo):
        sudo allows a permitted user to execute a commadn as another user.according to specification
        in the /etc/sudoers file.

        vim /etc/sudoers
        add the users in this file.
        ashish ALL=(ALL) ALL
    or  
    add user to wheel group or add group same as wheel droup

        gpasswd -a ajay wheel
    
    provide sudo privilege without password or warning
    
        vim /etc/sudoers
        ajay ALL=(ALL) NOPASSWD: ALL
        wq!
    
    limited permission:
        which useradd
        %kiran  ALL=/user/sbin/useradd(reult of which userid)
    Note: Kiran get sudo privilege to run only useradd.
    


---------------------------------------------------------------------------27-April-2025------------------------------------------------------------------
Manage Networking :

    for check ip address:
        ifconfig
        ip addr 

    for set ip address:
        nmcli: network manager command line interface
        nmtui:network manager Text user interface

    show device info:
        nmcli dev status

    show connection list:
        nmcli connection show
    
    create connection:
        nmcli connection add con-name delhi ifname enp0s3 type ethernet ipv4.add 192.168.
        1.2/24 gw4 192.168.1.1 ipv4.dns 192.168.1.1 connection.autoconnect yes ipv4.method manual

        nmcli connection show
    for deactivate running connection:
        nmcli connection down enp0s3
    for activate connection:
        nmcli connection up delhi

        nmcli connection show 
        nmcli device status


    for modify connection:
        nmcli connection modify delhi ipv4.add 192.168.1.20/24
        nmcli connection modify delhi gw4 192.168.1.254
        nmcli conatiner modify delhi ipv4.dns 8.8.8.8


        nmcli connection show delhi

    to add one more ipv4 dns
        nmcli connection modify delhi +ipv4.dns 192.168.1.1
    
    Note: everytime connection dowm and up

    create connection for automatice ip address

        nmcli connection add con-name goa ifname enp0s3 type ethernet
        connection.autoconnect yes ipv4.method auto 

    delete connection:
        nmcli connection delete delhi

    create connection store on following location
        cd /etc/NetworkManager/system-connections
        ls

--------------------------------------------------------------------------------
for set hostname:
    hostnamectl set-hostname server1.example.com 

for manage ip address(but nmcli recomended):
    nmtui:

-------------------------------------------------------------------------------------
ssh-(secure shell)
ssh command is use for access remote computer by using command line interface.
ssh is secure protocol because it create encrypted line source to destination
computer by using private / public key. it use port number 22.

steps for manage ssh connections:
allow root user ssh connection on both server :
    vim /etc/ssh/sshd_config
    PermitRootLogin yes
    PasswordAuthentication yes

    systemctl stop sshd 
    systemctl start sshd
    systemctl status sshd


    systemctl restart sshd


deny root user to remote login:

    PermitRootLogin no

deny any user to remote login:
    DenyUsers harry

ssh access of remote computer without password: key base authetication

generate ssh key:
    ssh-keygen

transfer created ssh key to server 2
    ssh-copy-id root@192.168.1.3

for verify:
    ssh root@192.168.1.3

Restrict ssh key base authetication:
    remove public key
    rm -rvf /root/.ssh/auth*

Note:    (store in home directory of user-key)

for disable sshd
    systemctl disable sshd
for enable sshd
    systemctl enable sshd






    

