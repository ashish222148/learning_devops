#chapter-1------------------------------------------Understanding Weired Symbols----------------------------------------------------------------------
1-Reserved Variable($_ or $PSITEM):
    get-service | where-object {$_}
        data which we receive as a input for next cmdlet is going to store in a variable _. It is manadatory that | symbol data
        will alsways be stored in _
        suppose you want to get only one item from that input then command will be like:
    get-service | where-object{$_.status -eg "stopped"}
2-dot operator:
    $service =get-service bits
    $service.status

IMP:   . operator will be used to access the property and menthod both, for example
    $service.stop()
    get-service bits
     
     use case:
        if we have txt file, we use get-content whereas if there will be csv file then,
        $computername =Import-csv c:\temp\computername.csv

        and suppose our csv file will contain the cname as header
        $computername.cname
        get-service bits -computername 


How to convert string in upper letter.
    $username ="ashish"
    $username | get-member
    $username.toupper()
    $username.tolower()

------------------------------------------------------------------------------------------------------------------------
Paranthesis or Round brackets:

(): excute first
    if any cmdlet need to excute first then we have to put in ()

    get-service -computername (get-content c:\temp\comp.txt)

    (get-service bits).name

{}: excute last

input from host:
    Read-host "Please enter the number to double"

    $number=read-host "please enter the number to double !!"
    $number +$number
IMP: to chekc the type 
    $number|get-member

[]
Type Casting:
    [int]$pin="ahmad"

"2"+2=22 because fist number is string
2+"2"=4  because first number is integer

------------------------------------------------------------------------------------------------------------------------------
Append Variable and Array:
    @()
    to nullify variable :
        $name=$null
    $name="ashish"
    $name =$name +" "+"kumar"

    or
    $name+=" kumar"

    $name = $null

    $name=@()
    $name +="ashish"
    $name +="singh"
    $name
    ashish
    singh

    or we can type casting at the begining:
    [array]$name="ashish"
    $name +="kumar"

to get count:
    $name.count
    $name[0]
    $name[-1]
    (get-service).count 
    (get-service)[-1]
-------------------------------------------------------------------------------------------------------------------------------------------------
Split, replace , trim

replace:
    $word="Ashish the great"
    $word -replace "the" ,"is"

join:    
    $number=1,2,3
    $number -join ";"

split:
    $word -split " "

Trim:
    $name ="ashish "
    $name.length
    ($name.trim()).length